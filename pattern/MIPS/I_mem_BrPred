// If module CHIP has sth wrong,
// the program will stuck at jump and write the wrong answer, 
// and then TestBed will notice sth wrong.
// a : # never      branch
// b : # interleave branch
// c : # always     branch

000000_00000_00000_00000_00000_000000 //0x00// nop
001000_00000_01000_0000000000001010   //0x04// addi r8  r0  0x000A           // a = 10
001000_00000_01001_0000000000010100   //0x08// addi r9  r0  0x0014           // b = 20
001000_00000_01010_0000000000011110   //0x0C// addi r10 r0  0x001E           // c = 30
001000_00000_01011_0000000000000000   //0x10// addi r11 r0  0x0000
001000_00000_01100_0000000000000000   //0x14// addi r12 r0  0x0000
001000_00000_01101_0000000000000000   //0x18// addi r13 r0  0x0000
001000_01011_01011_0000000000000001   //0x1C// addi r11 r11 0x0001           // Part_A
000100_01000_01011_0000000000000010   //0x20// beq  r8  r11 0x0002 (to 0x2C) // to Part_B
000010_00000000000000000000000111     //0x24// j    0x0000007 (to 0x1C)      // to Part_A
000010_00000000000000000000010011     //0x28// j    0x0000013 (to 0x4C)      // to Error
001000_01100_01100_0000000000000001   //0x2C// addi r12 r12 0x0001           // Part_B
000101_01001_01100_0000000000000001   //0x30// bne  r9  r12 0x0001 (to 0x38) // to Part_B_end
000010_00000000000000000000010000     //0x34// j    0x0000010 (to 0x40)      // to Part_C
000100_01000_01011_1111111111111100   //0x38// beq  r8  r11 0xFFFC (to 0x2C) // Part_B_end, to Part_B
000010_00000000000000000000010011     //0x3C// j    0x0000013 (to 0x4C)      // to Error
001000_01101_01101_0000000000000001   //0x40// addi r13 r13 0x0001           // Part_C
000101_01010_01101_1111111111111110   //0x44// bne  r10 r13 0xFFFE (to 0x40) // to Part_C
000010_00000000000000000000010100     //0x48// j    0x0000014 (to 0x50)      // to End
101011_00000_00000_0000000000000000   //0x4C// sw   r0  r0  0x0000           // Error
000000_01011_01100_01110_00000_100000 //0x50// add  r14 r11 r12              // End
000000_01110_01101_01110_00000_100000 //0x54// add  r14 r14 r13
101011_00000_01110_0000000000000000   //0x58// sw   r14  r0 0x0000           // a+b+c = 60
000000_00000_00000_00000_00000_000000 //0x5C// nop